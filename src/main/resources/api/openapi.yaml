openapi: '3.0.3'
info:
  version: 1.0.0
  title: Location Tracker API
servers:
  - url: http://localhost:3000
paths:
  /groups:
    get:
      tags:
        - Groups
      description: Get a list of groups user owns
      responses:
        200:
          description: A list of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
    post:
      tags:
        - Groups
      description: Create a new group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupChange'
      responses:
        201:
          description: Created group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  /groups/{groupId}:
    parameters:
      - name: groupId
        description: Group id
        in: path
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - Groups
      description: Get a group by id
      responses:
        200:
          description: Group data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        404:
          $ref: '#/components/responses/GroupNotFound'
    patch:
      tags:
        - Groups
      description: Update group data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupChange'
      responses:
        202:
          description: Group updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        404:
          $ref: '#/components/responses/GroupNotFound'
    delete:
      tags:
        - Groups
      description: Delete group
      responses:
        204:
          description: Group deleted
        404:
          $ref: '#/components/responses/GroupNotFound'
  /groups/{groupId}/users:
    parameters:
      - name: groupId
        description: Group id
        in: path
        required: true
        schema:
          type: integer
          format: int32
    post:
      tags:
        - Groups
      description: Add user to group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: integer
                  format: int32
                  description: User id
      responses:
        201:
          description: User added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        404:
          $ref: '#/components/responses/GroupNotFound'
  /groups/{groupId}/users/{userId}:
    parameters:
      - name: groupId
        description: Group id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: userId
        description: User id
        in: path
        required: true
        schema:
          type: integer
          format: int32
    delete:
      tags:
        - Groups
      description: Remove a user from group
      responses:
        202:
          description: User deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        404:
          $ref: '#/components/responses/GroupOrUserNotFound'
components:
  schemas:
    Group:
      description: A group of users that share location
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Group id
        name:
          type: string
          description: Encrypted group name
        color:
          type: string
          maxLength: 6
          minLength: 6
          description: Group color code
        users:
          type: array
          items:
            description: User id
            type: integer
            format: int32
    GroupChange:
      description: Group change
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Group name
        color:
          type: string
          maxLength: 6
          minLength: 6
          description: Group color code
    Error:
      description: Error
      type: object
      properties:
        code:
          type: string
          description: Error code
          maxLength: 128
        message:
          type: string
          description: Error message
  responses:
    GroupNotFound:
      description: Group not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            0:
              $ref: '#/components/examples/GroupNotFound'
    GroupOrUserNotFound:
      description: Group or user not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            0:
              $ref: '#/components/examples/GroupNotFound'
            1:
              $ref: '#/components/examples/UserNotFoundInGroup'
  examples:
    GroupNotFound:
      description: Group not found
      value:
        code: GROUP_NOT_FOUND
        message: 'Group with id {id} not found'
    UserNotFoundInGroup:
      description: User not found
      value:
        code: USER_NOT_FOUND_IN_GROUP
        message: 'User with id {id} not found in group {id}'